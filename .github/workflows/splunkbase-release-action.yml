name: Publish to Splunkbase
on:
  workflow_call:
    inputs:
      ucc_gen_version:
        description: "ucc-gen version to install"
        required: false
        type: string
        default: "5.10.2"
    secrets:
      SPLUNKBASE_USER:
        description: "Splunkbase username"
        required: true
      SPLUNKBASE_PASSWORD:
        description: "Splunkbase password"
        required: true


jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      addon_name: ${{ steps.addon_name.outputs.ADDON_NAME }}
      addon_version: ${{ steps.addon_version.outputs.ADDON_VERSION }}
    steps:
      - uses: actions/checkout@v4.1.5
      - uses: actions/setup-python@v4.6.1
        with:
          python-version: 3.7
      - name: Get version
        id: addon_version
        run: |
          ADDON_VERSION=$(cat package/default/app.conf | grep -e ^version | awk '{print $3}')
          echo "::set-output name=ADDON_VERSION::$ADDON_VERSION"
      - name: Get addon name
        id: addon_name
        run: |
          ADDON_NAME=$(cat package/default/app.conf | grep -e ^id | awk '{print $3}')
          echo "::set-output name=ADDON_NAME::$ADDON_NAME"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade splunk-packaging-toolkit==1.0.1 splunk-add-on-ucc-framework==${{ inputs.ucc_gen_version }}
      - name: Building app
        run: |
          ucc-gen --ta-version ${{ steps.addon_version.outputs.ADDON_VERSION }}
      - name: Packaging app
        run: |
          mkdir dist
          slim package output/${{ steps.addon_name.outputs.ADDON_NAME }} -o dist/
      - uses: actions/upload-artifact@v4.3.5
        with:
          name: ${{ steps.addon_name.outputs.ADDON_NAME }}-${{ steps.addon_version.outputs.ADDON_VERSION }}.tar.gz
          path: dist/

  splunkbase-release:
    name: Splunkbase release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4.1.5
      - uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ needs.build.outputs.ADDON_NAME }}-${{ needs.build.outputs.ADDON_VERSION }}.tar.gz
          path: dist
      - name: Load ENV variables
        id: vars
        run: |
          source .splunkbase
          echo ::set-output name=SPLUNKBASE_ID::"$SPLUNKBASE_ID"
          echo ::set-output name=SPLUNKBASE_SPLUNK_VERSION::"$SPLUNKBASE_SPLUNK_VERSION"
          echo ::set-output name=SPLUNKBASE_SPLUNK_CIM_VERSION::"$SPLUNKBASE_SPLUNK_CIM_VERSION"
          echo $SPLUNKBASE_ID
          echo $SPLUNKBASE_SPLUNK_VERSION
          echo $SPLUNKBASE_SPLUNK_CIM_VERSION
      - name: Authenticate to Splunkbase
        id: login
        shell: bash
        run: |
          curl --location --request POST 'https://splunkbase.splunk.com/api/account:login/' --data-urlencode 'username='"${{ secrets.SPLUNKBASE_USER }}"'' --data-urlencode 'password='"${{ secrets.SPLUNKBASE_PASSWORD }}"'' > login.xml
          ls
          pwd
          AUTH=$(awk '/id/{printf $1}' login.xml | cut -d'>' -f2 | cut -d'<' -f1)
          echo ::set-output name=SPLUNKBASE_SESSION_ID::"$AUTH"
      - name: Publish to Splunkbase
        shell: bash
        run: |
          ls dist
          echo ${{ steps.login.outputs.SPLUNKBASE_SESSION_ID }}
          echo ${{ steps.vars.outputs.SPLUNKBASE_ID }}
          echo ${{ steps.vars.outputs.SPLUNKBASE_SPLUNK_VERSION }}
          echo ${{ steps.vars.outputs.SPLUNKBASE_SPLUNK_CIM_VERSION }}
          curl -u ${{ secrets.SPLUNKBASE_USER }}:${{ secrets.SPLUNKBASE_PASSWORD }} --request POST https://splunkbase.splunk.com/api/v1/app/${{ steps.vars.outputs.SPLUNKBASE_ID }}/new_release/ -F "files[]=@dist/${{ needs.build.outputs.ADDON_NAME }}-${{ needs.build.outputs.ADDON_VERSION }}.tar.gz" -F "filename=${{ needs.build.outputs.ADDON_NAME }}-${{ needs.build.outputs.ADDON_VERSION }}.tar.gz" -F "cim_versions=${{ steps.vars.outputs.SPLUNKBASE_SPLUNK_CIM_VERSION }}" -F "splunk_versions=${{ steps.vars.outputs.SPLUNKBASE_SPLUNK_VERSION }}" -F "visibility=true"
